/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.10'

    //Lombok
    id "io.freefair.lombok" version "6.2.0"

    //Jacoco
    id 'jacoco'

}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
    mavenCentral()
}
//With out this literally nothing will work and you will hate your life
configurations {
    testCompile

    compile
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'

    // https://mvnrepository.com/artifact/org.testfx/testfx-core
    testImplementation 'org.testfx:testfx-core:4.0.16-alpha'


    // https://mvnrepository.com/artifact/org.testfx/testfx-junit5
    testImplementation group: 'org.testfx', name: 'testfx-junit5', version: '4.0.16-alpha'



    //Testfx
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.7.2'

    testCompile "org.testfx:testfx-core:4.0.16-alpha"

    testCompile group: 'org.hamcrest', name: 'hamcrest', version: '2.1'

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    //Mockito
    testImplementation "org.mockito:mockito-core:3.+"

    //Logj42
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'

    // Ikonli Text Icons
    implementation 'org.kordamp.ikonli:ikonli-javafx:12.1.0'
    implementation 'org.kordamp.ikonli:ikonli-fontawesome5-pack:12.1.0'
    implementation 'org.kordamp.ikonli:ikonli-materialdesign2-pack:12.1.0'
    implementation 'org.kordamp.ikonli:ikonli-material2-pack:12.1.0'


}

application {
    // Define the main class for the application.
    mainClass = 'edu.isu.cs.cs2263.hw02.App'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

javafx {
    version = "17"
    modules = ['javafx.controls']
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug',
                '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=10999'
    }
    jvmArgs "-Dheadless=${project.hasProperty('headless') ? project.headless : false}"
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }

}
